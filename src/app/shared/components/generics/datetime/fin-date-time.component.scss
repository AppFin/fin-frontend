.required {
  label::after {
    color: var(--color-error);
    content: ' *';
  }
}

.disabled .p-calendar {
  filter: brightness(0.9);
}

p-calendar {
  display: flex;
  span {
    width: 100%;

    timesicon {
      position: absolute;
      right: 0.5rem;
      top: 50%;
      transform: translateY(-50%);
    }
  }
}

.p-calendar:has(.ng-invalid.ng-touched) .p-inputtext,
.p-calendar:has(.ng-invalid.ng-dirty) .p-inputtext {
  border-color: var(--p-inputtext-invalid-border-color);
}

.p-iftalabel:has(.ng-invalid.ng-touched) label,
.p-iftalabel:has(.ng-invalid.ng-dirty) label {
  color: var(--p-iftalabel-invalid-color);
}

.sub-text {
  height: 30px;
  max-width: 100%;
  width: 100%;

  .error-sub {
    color: var(--color-error);
    display: flex;
  }
}

.input-container {
  margin-left: 8px;
  margin-right: 8px;
  margin-top: 6px;
  color: var(--text-color);
}