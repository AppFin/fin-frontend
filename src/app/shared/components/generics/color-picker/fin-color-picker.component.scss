.required {
  label::after {
    color: red;
    content: ' *';
  }
}

.disabled input {
  filter: brightness(0.9);
}

.p-inputtext.ng-invalid.ng-touched,
.p-inputtext.ng-invalid.ng-dirty {
  border-color: var(--p-inputtext-invalid-border-color);
}

.p-iftalabel:has(.ng-invalid.ng-touched) label,
.p-iftalabel:has(.ng-invalid.ng-dirty) label {
  color: var(--p-iftalabel-invalid-color)
}

.sub-text {
  height: 30px;
  max-width: 100%;
  width: 100%;

  .error-sub {
    color: var(--color-error);
    display: flex;
  }
}

.input-container {
  margin-left: 8px;
  margin-right: 8px;
  margin-top: 6px;
  color: var(--text-color);

  .color-input-wrapper {
    position: relative;
    display: flex;
    align-items: center;

    .color-native-input {
      flex: 1;
      // Estilos para o input nativo
      padding: 0;
      border: 1px solid var(--p-inputtext-border-color);
      border-radius: 4px;
      height: 53px;
      width: 100%;
      cursor: pointer;

      &:hover {
        border-color: var(--p-inputtext-focus-border-color);
      }
    }
  }
}